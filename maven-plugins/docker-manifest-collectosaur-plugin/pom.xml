<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>cd.connect.pipeline</groupId>
	<artifactId>docker-manifest-collectosaur-plugin</artifactId>
	<version>1.3-SNAPSHOT</version>
	<packaging>maven-plugin</packaging>
	<name>docker-manifest-collectosaur-plugin</name>

	<url>https://clearpointnz.github.io/connect/</url>
	<developers>
		<developer>
			<email>richard@bluetrainsoftware.com</email>
			<id>rvowles</id>
			<name>Richard Vowles</name>
			<organization>on behalf of Connect</organization>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>https://opensource.org/licenses/Apache-2.0</url>
		</license>
	</licenses>

	<description>
		This plugin is designed to be used in artifacts that generate docker images. babysaur will create a manifest
		file in artifacts that create docker images and you should use mamasaur in the reactor that controls them. It depends
		on the "modules" section and will walk down through your POM files looking for submodules of submodules. Given this
		does not work with Maven when building differences, you should generally NOT use multiple levels of submodules with
		maven reactors.
	</description>

	<scm>
		<connection>scm:git:git@github.com:clearpointnz/connect-java.git</connection>
		<developerConnection>scm:git:git@github.com:clearpointnz/connect-java.git</developerConnection>
		<url>git@github.com:clearpointnz/connect-java.git</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<maven.version>3.3.9</maven.version>
		<dependency.check.fastfail />
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-artifact</artifactId>
			<version>${maven.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-core</artifactId>
			<version>${maven.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>com.google.code.google-collections</groupId>
					<artifactId>google-collect</artifactId>
				</exclusion>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>3.4</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.plexus</groupId>
			<artifactId>plexus-maven-plugin</artifactId>
			<version>1.3.8</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.6</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-exec</artifactId>
			<version>1.3</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>2.5.7</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy-json</artifactId>
			<version>2.5.7</version>
		</dependency>

		<dependency>
			<groupId>cd.connect.composites.java</groupId>
			<artifactId>connect-composite-jackson</artifactId>
			<version>[2.1, 3)</version>
		</dependency>



		<dependency>
			<groupId>cd.connect.composites.java</groupId>
			<artifactId>connect-composite-test</artifactId>
			<version>[2.1,3)</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>io.repaint.maven</groupId>
				<artifactId>tiles-maven-plugin</artifactId>
				<version>2.10</version>
				<extensions>true</extensions>
				<configuration>
					<filtering>false</filtering>
					<tiles>
						<tile>cd.connect.tiles:tile-java:[1.2, 2)</tile>
					</tiles>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.plexus</groupId>
				<artifactId>plexus-component-metadata</artifactId>
				<version>1.6</version>
				<executions>
					<execution>
						<goals>
							<goal>generate-metadata</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>3.4</version>
				<configuration>
					<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
				</configuration>
				<executions>
					<!-- if you want to generate help goal -->
					<execution>
						<id>generated-helpmojo</id>
						<goals>
							<goal>helpmojo</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.gmavenplus</groupId>
				<artifactId>gmavenplus-plugin</artifactId>
				<version>1.7.0</version>
				<executions>
					<execution>
						<goals>
							<goal>addSources</goal>
							<goal>addTestSources</goal>
							<goal>generateStubs</goal>
							<goal>compile</goal>
							<goal>generateTestStubs</goal>
							<goal>compileTests</goal>
							<goal>removeStubs</goal>
							<goal>removeTestStubs</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<invokeDynamic>true</invokeDynamic>
				</configuration>
			</plugin>

<!--			<plugin>-->
<!--				<groupId>org.apache.maven.plugins</groupId>-->
<!--				<artifactId>maven-invoker-plugin</artifactId>-->
<!--				<version>3.2.0</version>-->
<!--				<configuration>-->
<!--					<projectsDirectory>src/it</projectsDirectory>-->
<!--					<cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>-->
<!--					&lt;!&ndash;<mavenOpts>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000</mavenOpts>&ndash;&gt;-->
<!--					<pomIncludes>-->
<!--						<pomInclude>*/pom.xml</pomInclude>-->
<!--					</pomIncludes>-->
<!--					&lt;!&ndash; <preBuildHookScript>setup</preBuildHookScript> &ndash;&gt;-->
<!--					<postBuildHookScript>verify</postBuildHookScript>-->
<!--					<localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>-->
<!--					<settingsFile>src/it/settings.xml</settingsFile>-->
<!--					<debug>true</debug>-->
<!--				</configuration>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<id>integration-test</id>-->
<!--						<goals>-->
<!--							<goal>install</goal>-->
<!--							<goal>run</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
	</build>
</project>
