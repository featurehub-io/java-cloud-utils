package {{package}};

import cd.connect.openapi.support.ApiClient;
import cd.connect.openapi.support.ApiResponse;
import cd.connect.openapi.support.Pair;
import java.io.InputStream;

{{#jersey3}}
import jakarta.ws.rs.BadRequestException;
import jakarta.ws.rs.core.GenericType;
import jakarta.ws.rs.core.Response;
import jakarta.ws.rs.core.SecurityContext;
{{/jersey3}}
{{#jersey2}}
import javax.ws.rs.BadRequestException;
import javax.ws.rs.core.GenericType;
import javax.ws.rs.core.Response;
import javax.ws.rs.core.SecurityContext;
{{/jersey2}}

{{#imports}}import {{import}};
{{/imports}}

{{^fullJavaUtil}}
  import java.util.ArrayList;
  import java.util.HashMap;
  import java.util.List;
  import java.util.Map;
{{/fullJavaUtil}}

{{>generatedAnnotation}}
{{#operations}}
  public interface {{{classname}}}Delegate {

  {{#operation}}

    {{#vendorExtensions.x-has-delegator-holder}}
      static class {{{vendorExtensions.x-class-delegator-holder}}} {
      {{#vendorExtensions.x-delegator-holder-params}}
        public {{{dataType}}} {{paramName}};
      {{/vendorExtensions.x-delegator-holder-params}}
      }
    {{/vendorExtensions.x-has-delegator-holder}}


    /**
    * {{summary}}
    * {{notes}}
    * @see {{{classname}}}#{{{operationId}}}
    {{#isDeprecated}}
      * @deprecated
    {{/isDeprecated}}
    {{#externalDocs}}
      * {{description}}
      * @see <a href="{{url}}">{{summary}} Documentation</a>
    {{/externalDocs}}
    */
    public @org.jetbrains.annotations.NotNull {{#returnType}}{{{returnType}}} {{/returnType}}{{^returnType}}Response {{/returnType}}{{operationId}}(
      {{#vendorExtensions.x-has-java-params}}
        {{{vendorExtensions.x-java-params-plus-types}}}
      {{/vendorExtensions.x-has-java-params}}
      {{#vendorExtensions.x-has-delegator-holder}}
        {{#vendorExtensions.x-has-java-params}},{{/vendorExtensions.x-has-java-params}}
		@org.jetbrains.annotations.NotNull {{{vendorExtensions.x-class-delegator-holder}}} holder
      {{/vendorExtensions.x-has-delegator-holder}}
    {{#authMethods}}{{#hasParams}}, {{/hasParams}}SecurityContext securityContext{{/authMethods}});
  {{/operation}}
  }
{{/operations}}
